#include <Adafruit_BMP280.h>
#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <Adafruit_Sensor.h>
#include <Fonts/FreeSans12pt7b.h>
#include <Fonts/FreeSans18pt7b.h>
#include <Fonts/FreeSans24pt7b.h>
#include <Fonts/FreeSans9pt7b.h>
#include <Fonts/FreeSansBold12pt7b.h>
#include <Fonts/FreeSansBold18pt7b.h>
#include <Fonts/FreeSansBold24pt7b.h>
#include <Fonts/FreeSansBold9pt7b.h>
#include <HTTPClient.h>
#include <SPI.h>
#include <SoftwareSerial.h>
#include <TinyGPS++.h>
#include <Wire.h>
#include "WiFi.h"
#define TFT_CS 15
#define TFT_RST 4
#define TFT_DC 5
#define TFT_SCLK 18
#define TFT_MOSI 23
#define BMP_SDA 21
#define BMP_SCL 22
#define GPS_TX 17	// ESP32 TX pin connected to GPS module RX pin
#define GPS_RX 16	// ESP32 RX pin connected to GPS module TX pin
#define LCD_SDA 23
#define LCD_SCL 19
#define RGB(r, g, b)(((r & 0xF8) << 8) | ((g & 0xFC) << 3) | (b >> 3))
#define DARKGREY RGB(50, 50, 50)
#define LIGHTGREY RGB(93, 93, 93)
#define BUTTON_PIN 12
int buttonState = HIGH;
int lastButtonState = HIGH;
int currentScreen = 0;
int radius = 15;
int thickness = 7;
int delayTime = 50;
const char *ssid = "SSID"; //Change this
const char *password = "PASSWORD"; //Change this
const char *serverName = "HTTPS"; // Change this
float setPressure = 1035.76;
Adafruit_BMP280 bmp;
TinyGPSPlus gps;
Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_MOSI, TFT_SCLK, TFT_RST);
SoftwareSerial gpsSerial(GPS_RX, GPS_TX);
String strTemp, strPressure;
String strLon = "not available";
String strLat = "not available";
String strAlt = "not available";
String numSats = "0";
String hour = "not available";
String minute = "not available";
String speed = "not available";
const uint16_t WIDTH = 160;
const uint16_t HEIGHT = 128;
const unsigned char GPSBoot[] PROGMEM = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf9, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x3f, 0xc7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x0f, 0xc1, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x0f, 0x83, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x0f, 0x87, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x3f, 0xcf, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xef, 0x3c, 0xfe, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc7, 0xf0, 0xfc, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x83, 0xf0, 0x78, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xe0, 0xfc, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x87, 0xf1, 0xee, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc7, 0xff, 0xcf, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xfe, 0x3f, 0x83, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfe, 0x1f, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x78, 0x1f, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xfc, 0x3f, 0x87, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0xfe, 0x79, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x7b, 0xcf, 0xf1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x87, 0xe0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3c, 0x1f, 0x03, 0xc0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9c, 0x78, 0x1f, 0x07, 0xe0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x7c, 0x3f, 0x8f, 0xf1, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x1e, 0x3b, 0xde, 0x7b, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x8e, 0xf1, 0xfc, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xcf, 0xe0, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe3, 0xc0, 0xf8, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xf1, 0xe1, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xf3, 0xde, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xfc, 0x7f, 0x8f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xfe, 0x3f, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x1e, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x9f, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xc7, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xe3, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf1, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfe, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfe, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x9f, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x8f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe7, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xe3, 0xff, 0xff, 0xff, 0xf0, 0x5e, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xf1, 0xff, 0xff, 0xff, 0xc7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3c, 0xff, 0xff, 0xff, 0x1f, 0xfc, 0x70, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x7c, 0x7f, 0xff, 0xfe, 0x7f, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x7f, 0x3f, 0xff, 0xf8, 0xff, 0xf3, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf9, 0xef, 0x1f, 0xff, 0xf3, 0xff, 0xc7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x3f, 0xc7, 0xcf, 0xff, 0xe7, 0xff, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x1f, 0x83, 0xc7, 0xff, 0xcf, 0xff, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x0f, 0x03, 0xe3, 0xff, 0x9f, 0xfe, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x0f, 0x87, 0xf9, 0xff, 0xbf, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x1f, 0xcf, 0x38, 0xff, 0x3f, 0xf8, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x01, 0xef, 0x39, 0xfe, 0x3e, 0x7e, 0x7f, 0xe3, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc7, 0xf8, 0xfc, 0x1e, 0x3e, 0xff, 0xe7, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0x83, 0xe0, 0x78, 0x0f, 0x1c, 0xff, 0x83, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x01, 0xe0, 0xfc, 0x1e, 0x0d, 0xff, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xf1, 0xfe, 0x3c, 0x01, 0xff, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x8f, 0xfb, 0xcf, 0xf8, 0x01, 0xfe, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x79, 0xee, 0x3f, 0x87, 0xf0, 0x03, 0xfc, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0xfc, 0x1f, 0x03, 0xe0, 0x03, 0xf9, 0xf8, 0x40, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x7c, 0x1f, 0x03, 0xc0, 0x03, 0xf1, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xfc, 0x3f, 0x87, 0x00, 0x07, 0xe7, 0xf9, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0xfe, 0x7b, 0xcf, 0x00, 0x03, 0xc7, 0xf0, 0xf8, 0x0e, 0x00, 0x00, 0x0f, 0x7b, 0xcf, 0xf1, 0xfe, 0x00, 0x07, 0xcf, 0xe0, 0xfc, 0x1e, 0x10, 0x00, 0x1c, 0x3f, 0x87, 0xe0, 0xfc, 0x00, 0x07, 0x9f, 0xc0, 0x3c, 0x0e, 0x38, 0x00, 0x3c, 0x1f, 0x03, 0xc0, 0x78, 0x00, 0x07, 0x3f, 0x80, 0x38, 0x1e, 0x38, 0x00, 0xf8, 0x1f, 0x07, 0xe0, 0xf0, 0x00, 0x02, 0x7f, 0x00, 0x00, 0x1e, 0x3c, 0xe0, 0x38, 0x3f, 0x0f, 0xf1, 0xe0, 0x00, 0x06, 0x7e, 0x00, 0x00, 0x3c, 0x78, 0xf0, 0x3e, 0x7b, 0xde, 0x77, 0xc0, 0x00, 0x04, 0xf8, 0x00, 0x00, 0x3c, 0x38, 0xf0, 0x0e, 0xf3, 0xfc, 0x3f, 0x80, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf8, 0x78, 0xf0, 0x0f, 0xe0, 0xf8, 0x1e, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x01, 0xf8, 0xf9, 0xe0, 0x03, 0xc0, 0xf8, 0x1e, 0x00, 0x00, 0x01, 0x80, 0x00, 0x1f, 0xf0, 0xf0, 0xe0, 0x01, 0xc1, 0xf8, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc1, 0xf1, 0xe0, 0x01, 0xf3, 0xde, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xe1, 0xe0, 0x00, 0x77, 0x9f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07, 0xc3, 0xc0, 0x00, 0x3f, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc3, 0xc0, 0x00, 0x3e, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x07, 0x80, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x0f, 0x80, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x0f, 0x00, 0x00, 0x03, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x3e, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x7c, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00
};

const unsigned char logoo[] PROGMEM = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF3, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xF7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x63, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0xB7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1E, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x9C, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF7, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE3, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF9, 0xFE, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0xFE, 0x7B, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x7F, 0x33, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x3F, 0xA7, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1F, 0x8F, 0x7B, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xCF, 0xCE, 0x31, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xCE, 0x7B, 0xE0, 0x0F, 0xE1, 0xFF, 0x81, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC3, 0xC7, 0xCE, 0x70, 0x3F, 0xF9, 0xFF, 0xE7, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x03, 0xC3, 0xCE, 0x78, 0x7C, 0x7D, 0xC0, 0xF7, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x02, 0x8E, 0x31, 0xC1, 0xFB, 0xF0, 0x70, 0x1D, 0xC0, 0x77, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x02, 0x8E, 0x1D, 0xC0, 0xF1, 0xE0, 0x60, 0x01, 0xC0, 0x77, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x02, 0xC4, 0x07, 0xC0, 0x7B, 0xC0, 0x61, 0xFD, 0xC0, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x02, 0x40, 0x01, 0x80, 0x3F, 0x80, 0x61, 0xFD, 0xFF, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x02, 0x70, 0x00, 0x00, 0x1E, 0x00, 0x70, 0x1D, 0xFF, 0xCE, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x03, 0x1C, 0x00, 0x00, 0x0C, 0x00, 0x78, 0x7D, 0xC0, 0x07, 0x83, 0xC0, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xED, 0xC0, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x8D, 0xC0, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x1F, 0xFC, 0x03, 0xFF, 0x00, 0xFF, 0x1F, 0xFF, 0xF8, 0xFF, 0xE1, 0xFF, 0xF8, 0x7C, 0x00, 0x3F, 0xFF, 0x0F, 0xFF, 0xC0, 0xFF, 0x9F, 0xFF, 0xF9, 0xFF, 0xF9, 0xFF, 0xFC, 0x7C, 0x00, 0x7F, 0xFF, 0x9F, 0xFF, 0xE1, 0xFF, 0x9F, 0xFF, 0xFB, 0xFF, 0xFD, 0xFF, 0xFE, 0x7C, 0x00, 0xFF, 0xFF, 0x9F, 0xFF, 0xE1, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0x7C, 0x00, 0xFC, 0x1F, 0xBF, 0x03, 0xF3, 0xF7, 0xC0, 0x7C, 0x07, 0xE0, 0xFD, 0xF0, 0x3F, 0x7C, 0x00, 0xF8, 0x0F, 0xFF, 0x03, 0xF3, 0xE7, 0xE0, 0x7C, 0x07, 0xC0, 0x7F, 0xF0, 0x3F, 0x7C, 0x00, 0xF8, 0x0F, 0xFE, 0x00, 0x07, 0xE3, 0xE0, 0x7C, 0x07, 0xC0, 0x7F, 0xFF, 0xFF, 0x7C, 0x00, 0xF8, 0x0F, 0xFE, 0x03, 0xF7, 0xE3, 0xF0, 0x7C, 0x07, 0xC0, 0x7F, 0xFF, 0xFE, 0x7C, 0x00, 0xFC, 0x0F, 0xFF, 0x03, 0xF7, 0xFF, 0xF0, 0x7C, 0x07, 0xE0, 0x7D, 0xFF, 0xFE, 0x7F, 0xFE, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0xFF, 0xF0, 0x7C, 0x07, 0xFF, 0xFD, 0xFF, 0xF8, 0x7F, 0xFE, 0x7F, 0xFF, 0x9F, 0xFF, 0xEF, 0xFF, 0xF8, 0x7C, 0x03, 0xFF, 0xFD, 0xF0, 0xFC, 0x7F, 0xFE, 0x7F, 0xFF, 0x0F, 0xFF, 0xDF, 0x81, 0xF8, 0x7C, 0x03, 0xFF, 0xF9, 0xF0, 0xFC, 0x7F, 0xFE, 0x1F, 0xFE, 0x07, 0xFF, 0x9F, 0x80, 0xFC, 0x7C, 0x00, 0xFF, 0xF1, 0xF0, 0x7E, 0x7F, 0xFE, 0x03, 0xF0, 0x00, 0xFC, 0x3F, 0x00, 0xFC, 0x7C, 0x00, 0x1F, 0x81, 0xF0, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char wifilogo[] PROGMEM = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xFF, 0xF0, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x7F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xFE, 0x7F, 0xF0, 0x01, 0xFF, 0xFF, 0x80, 0x0F, 0xFE, 0xFF, 0xC0, 0x0F, 0xFF, 0xFF, 0xF0, 0x03, 0xFF, 0xFF, 0x80, 0x3F, 0xFF, 0xFF, 0xFC, 0x01, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x7E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x7E, 0x3C, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x3C, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x7F, 0x80, 0x03, 0xC0, 0x01, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x7F, 0xFE, 0x00, 0xFE, 0x00, 0x00, 0x3E, 0x01, 0xFF, 0xFF, 0x80, 0x7C, 0x00, 0x00, 0x18, 0x07, 0xFF, 0xFF, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup()
{
	bmp.setSampling(Adafruit_BMP280::MODE_NORMAL, Adafruit_BMP280::SAMPLING_X1, Adafruit_BMP280::SAMPLING_X1, Adafruit_BMP280::FILTER_X16, Adafruit_BMP280::STANDBY_MS_500);
	pinMode(BUTTON_PIN, INPUT_PULLUP);
	Serial.begin(9600);
	gpsSerial.begin(9600);
	Wire.begin(BMP_SDA, BMP_SCL);
	bmp.begin(0x76);
	tft.initR(INITR_BLACKTAB);
	tft.setRotation(0);
	tft.fillScreen(ST7735_BLACK);
	tft.drawBitmap(3, 30, logoo, 120, 64, ST7735_WHITE);
	tft.setCursor(13.5, 95);
	tft.setTextSize(1);
	tft.setTextColor(ST7735_WHITE);
	tft.print("By: Timo Poyhonen");
	for (int i = 0; i < 98; i += 4)
	{
		tft.fillRect(15, 125, i, 4, ST7735_ORANGE);
		delay(55);
	}

	delay(900);
	tft.fillScreen(ST7735_BLACK);
	tft.drawBitmap(32, 25, wifilogo, 64, 64, ST7735_WHITE);
	tft.setCursor(12, 100);
	tft.setTextSize(1);
	tft.setTextColor(ST7735_WHITE);
	tft.print("Waiting for Wi-Fi");
	while (WiFi.status() != WL_CONNECTED)
	{
		initWiFi();
		int centerX = tft.width() / 2;
		int centerY = tft.height() / 2 + tft.height() / 3;
		for (int i = 0; i < 12; i++)
		{
			int x1 = centerX + (radius - thickness) *cos(i *30 *PI / 180);
			int y1 = centerY + (radius - thickness) *sin(i *30 *PI / 180);
			int x2 = centerX + radius* cos(i *30 *PI / 180);
			int y2 = centerY + radius* sin(i *30 *PI / 180);
			tft.drawLine(x1, y1, x2, y2, ST7735_WHITE);
			delay(60);
			tft.drawLine(x1, y1, x2, y2, DARKGREY);
		}
	}

	tft.fillScreen(ST7735_BLACK);
}

void initWiFi()
{
	WiFi.mode(WIFI_STA);
	WiFi.begin(ssid, password);
	Serial.print("Waiting for WiFi");
	Serial.println(WiFi.localIP());
}

void loop()
{
	buttonState = digitalRead(BUTTON_PIN);
	if (buttonState == LOW && lastButtonState == HIGH)
	{
		currentScreen = (currentScreen + 1) % 3;
		tft.fillScreen(ST7735_BLACK);
	}

	while (gpsSerial.available() > 0)
	{
		if (gps.encode(gpsSerial.read()))
		{
			strLat = String(gps.location.lat(), 6);
			strLon = String(gps.location.lng(), 6);
			strAlt = String(gps.altitude.meters(), 2);
			numSats = String(gps.satellites.value());
			hour = String(gps.time.hour());
			minute = String(gps.time.minute());
			speed = String(gps.speed.kmph(), 1);
			strTemp = bmp.readTemperature(), 1;
			strPressure = bmp.readPressure() / 100;
			UpdateWeb();
			if (gps.location.isValid() == 1)
			{
				tft.fillScreen(ST7735_BLACK);
				if (currentScreen == 0)
				{
					screenOne();
				}
				else if (currentScreen == 1)
				{
					screenTwo();
				}
				else if (currentScreen == 2)
				{
					screenThree();
				}

				lastButtonState = buttonState;
			}
			else
			{
				screenGPS();
			}
		}
	}
}

void UpdateWeb()
{
	if (WiFi.status() == WL_CONNECTED)
	{
		WiFiClient client;
		HTTPClient http;
		http.begin(serverName);
		http.addHeader("Content-Type", "text/plain");
		String httpRequestData = strLat + "," + strLon + "," + strTemp + "," + strPressure + "," + strAlt + "," + numSats;
		int httpResponseCode = http.POST(httpRequestData);
		Serial.println(httpRequestData);
		http.end();
	}
	else
	{
		Serial.println("WiFi Disconnected");
	}
}

void screenOne()
{
	tft.setFont(&FreeSansBold24pt7b);
	tft.setCursor(10, 45);
	tft.setTextColor(ST7735_ORANGE);
	tft.setTextSize(1);
	tft.print("LAT:");
	tft.setFont(&FreeSans12pt7b);
	tft.setCursor(10, 70);
	tft.setTextColor(ST7735_WHITE);
	tft.setTextSize(1);
	tft.print(strLat);
	tft.setFont(&FreeSansBold24pt7b);
	tft.setCursor(10, 120);
	tft.setTextColor(ST7735_ORANGE);
	tft.setTextSize(1);
	tft.print("LNG:");
	tft.setFont(&FreeSans12pt7b);
	tft.setCursor(10, 145);
	tft.setTextColor(ST7735_WHITE);
	tft.setTextSize(1);
	tft.print(strLon);
}

void screenTwo()
{
	tft.setFont();
	tft.setCursor(10, 10);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Sat: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(numSats);
	tft.setCursor(10, 25);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Lat: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(strLat);
	tft.setCursor(10, 40);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Lng: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(strLon);
	tft.setCursor(10, 55);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Temp: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(strTemp);
	tft.print("C");
	tft.setCursor(10, 70);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Press: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(strPressure);
	tft.print("hPa");
	tft.setCursor(10, 85);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Alt: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(strAlt);
	tft.print("m");
	tft.setCursor(10, 100);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Speed: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(speed);
	tft.print("km/h");
	tft.setCursor(10, 115);
	tft.setTextColor(ST7735_MAGENTA);
	tft.setTextSize(1);
	tft.print("Time: ");
	tft.setTextColor(ST7735_WHITE);
	tft.print(hour);
	tft.print(":");
	tft.print(minute);
	tft.print(" GMT+0");
}

void screenThree()
{
	tft.setFont();
	tft.setCursor(10, 10);
	tft.setTextColor(ST7735_WHITE);
	tft.setTextSize(1);
	tft.println("Screen 2");
}

void screenGPS()
{
	tft.drawBitmap(6, 5, GPSBoot, 100, 100, ST7735_WHITE);
	tft.fillRect(60, 135, 10, 10, ST7735_BLACK);
	tft.setTextColor(ST7735_WHITE);
	tft.setTextSize(1);
	tft.setCursor(10, 120);
	tft.print("Finding satellites");
	delay(5000);
	tft.fillScreen(ST7735_BLACK);
}
